# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI Tests

on:
  push:
    branches: [ "master" ]
    tags:
      - v*
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  ci_matrix:
    name: Unit Tests
    strategy:
      matrix:
        python_version: [3.8, 3.9, "3.10", "3.11"]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python  ${{ matrix.python_version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python_version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest -m "not uses_geopandas"
        python -m doctest swmmio/core.py 

  release:
    name: Publish Python üêç distributions üì¶ to PyPI and TestPyPI
    runs-on: ubuntu-latest
    needs: [ci_matrix]
    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Build package
        run: | 
          echo ${{ github.ref }}
          echo ${{ github.ref_type }}
          pip install wheel
          python setup.py bdist_wheel
      - name: Publish distribution üì¶ to Test PyPI
        if: ${{ github.ref_type == 'tag'}}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution üì¶ to PyPI
        if: ${{ github.ref_type == 'tag'}}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
